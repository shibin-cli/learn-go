import{_ as e,c as a,o as r,a as i}from"./app.1597157c.js";const f=JSON.parse('{"title":"RPC","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是 RPC","slug":"什么是-rpc","link":"#什么是-rpc","children":[]},{"level":2,"title":"远程过程面临的问题","slug":"远程过程面临的问题","link":"#远程过程面临的问题","children":[]}],"relativePath":"base/rpc.md"}'),l={name:"base/rpc.md"},t=i('<h1 id="rpc" tabindex="-1">RPC <a class="header-anchor" href="#rpc" aria-hidden="true">#</a></h1><h2 id="什么是-rpc" tabindex="-1">什么是 RPC <a class="header-anchor" href="#什么是-rpc" aria-hidden="true">#</a></h2><ul><li>RPC(Remote Procedure Call) 远程过程调用， 简单理解是一个节点请求另一个节点提供的服务</li><li>对应 RPC 的是本地过程调用，函数调用是最常见的本地过程调用</li><li>将本地过程变成远程过程调用会面临各种问题</li></ul><h2 id="远程过程面临的问题" tabindex="-1">远程过程面临的问题 <a class="header-anchor" href="#远程过程面临的问题" aria-hidden="true">#</a></h2><p>本地函数放到另一个服务器上去运行，但是会引入很多新问题</p><ul><li>Call 的 id 映射</li><li>序列化和反序列化</li><li>网络传输</li></ul>',6),c=[t];function d(n,s,o,_,h,p){return r(),a("div",null,c)}const C=e(l,[["render",d]]);export{f as __pageData,C as default};
