import{_ as s,c as a,o as n,Q as p}from"./chunks/framework.88922de4.js";const F=JSON.parse('{"title":"protobuf","description":"","frontmatter":{},"headers":[],"relativePath":"base/rpc/protobuf.md"}'),l={name:"base/rpc/protobuf.md"},o=p(`<h1 id="protobuf" tabindex="-1">protobuf <a class="header-anchor" href="#protobuf" aria-label="Permalink to &quot;protobuf&quot;">​</a></h1><p>protobuf 官网文档 <a href="https://protobuf.dev/programming-guides/proto3/" target="_blank" rel="noreferrer">https://protobuf.dev/programming-guides/proto3/</a></p><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><h3 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h3><table><thead><tr><th>.proto Type</th><th>说明</th><th>Go Type</th></tr></thead><tbody><tr><td>double</td><td></td><td>float64</td></tr><tr><td>float</td><td></td><td>float32</td></tr><tr><td>int32</td><td>使用变长编码，对于负值的效率很低，如果你的域有可能有负值，请使用sint64替代</td><td>int32</td></tr><tr><td>uint32</td><td>使用变长编码</td><td>uint32</td></tr><tr><td>uint64</td><td>使用变长编码</td><td>uint64</td></tr><tr><td>sint32</td><td>使用变长编码，这些编码在负值时比 int32 高效的多</td><td>int32</td></tr><tr><td>sint64</td><td>使用变长编码，有符号的整型值。编码时比通常的 int64 高效。</td><td>int64</td></tr><tr><td>fixed32</td><td>总是 4 个字节，如果数值总是比总是比 228 大的话，这个类型会比 uint32 高效。</td><td>uint32</td></tr><tr><td>fixed64</td><td>总是 8 个字节，如果数值总是比总是比 256 大的话，这个类型会比 uint64 高效。</td><td>uint64</td></tr><tr><td>sfixed32</td><td>总是 4 个字节</td><td>int32</td></tr><tr><td>sfixed64</td><td>总是 8 个字节</td><td>int64</td></tr><tr><td>bool</td><td></td><td>bool</td></tr><tr><td>string</td><td>一个字符串必须是 UTF-8 编码或者 7-bit ASCII 编码的文本。</td><td>string</td></tr><tr><td>bytes</td><td>可能包含任意顺序的字节数据。</td><td>[]byte</td></tr></tbody></table><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 1 是编号不是值</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;">  age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="枚举类型" tabindex="-1">枚举类型 <a class="header-anchor" href="#枚举类型" aria-label="Permalink to &quot;枚举类型&quot;">​</a></h3><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Gender</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  MALE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  FEMALE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;">  age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Gender</span><span style="color:#A6ACCD;"> g </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>go 中使用枚举类型</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Gender_FEMALE</span></span>
<span class="line"></span></code></pre></div><h3 id="map-类型" tabindex="-1">Map 类型 <a class="header-anchor" href="#map-类型" aria-label="Permalink to &quot;Map 类型&quot;">​</a></h3><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 姓名</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;">  age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 年龄</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">, </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>这里不太建议使用 map， 因为无法直接看出 key 所表示的意思</p><h3 id="timestamp" tabindex="-1">timestamp <a class="header-anchor" href="#timestamp" aria-label="Permalink to &quot;timestamp&quot;">​</a></h3><p>proto 文件中需要从 <code>google/protobuf/timestamp.proto</code> 导入该类型</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;google/protobuf/timestamp.proto&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">google.protobuf.Timestamp</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>使用时需要导入拓展</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">google.golang.org/protobuf/types/known/timestamppb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Server</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SayHello</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> request </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HelloRequest</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">		Date</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> timestamppb</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Now</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="protobuf-拓展" tabindex="-1">protobuf 拓展 <a class="header-anchor" href="#protobuf-拓展" aria-label="Permalink to &quot;protobuf 拓展&quot;">​</a></h3><p>可以从 <code>google/protobuf/</code> 目录下导入相应的 protobuf 拓展，例如 timestamp 、empty 等</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;google/protobuf/timestamp.proto&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;google/protobuf/empty.proto&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="默认值" tabindex="-1">默认值 <a class="header-anchor" href="#默认值" aria-label="Permalink to &quot;默认值&quot;">​</a></h2><p>默认值 当一个消息被解析的时候，如果被编码的信息不包含一个特定的singular元素，被解析的对象锁对应的域被设置位一个默认值，对于不同类型指定如下：</p><ul><li>对于 strings，默认是一个空 string</li><li>对于 bytes，默认是一个空的 bytes</li><li>对于 bools，默认是 false</li><li>对于数值类型，默认是 0</li><li>对于枚举，默认是第一个定义的枚举值，必须为 0</li><li>对于消息类型（ message ），域没有被设置，确切的消息是根据语言确定的，详见 <a href="https://protobuf.dev/reference/" target="_blank" rel="noreferrer">generated code guide</a></li><li>对于可重复域的默认值是空（通常情况下是对应语言中空列表）</li></ul><p>注：对于标量消息域，一旦消息被解析，就无法判断域释放被设置为默认值（例如，例如 boolean 值是否被设置为 false ）还是根本没有被设置。你应该在定义你的消息类型时非常注意。例如，比如你不应该定义 boolean 的默认值 false 作为任何行为的触发方式。也应该注意如果一个标量消息域被设置为标志位，这个值不应该被序列化传输。 查看 <a href="https://protobuf.dev/reference/" target="_blank" rel="noreferrer">generated code guide</a> 选择你的语言的默认值的工作细节。</p><h2 id="option-go-package-的作用" tabindex="-1">option go_package 的作用 <a class="header-anchor" href="#option-go-package-的作用" aria-label="Permalink to &quot;option go_package 的作用&quot;">​</a></h2><p>通过 option go_package 可以指定编译生成后的文件和 package 名称</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ./v2 指定生成文件目录是 当前目录下的 v2 目录， package 名称为 hello</span></span>
<span class="line"><span style="color:#F78C6C;">option</span><span style="color:#A6ACCD;"> go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;./v2;hello&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StreamReqData</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">  data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StreamResData</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>分号后面可以指定 package 的名称，如果不指定默认为生成文件目录的名称</p><p>例如下面代码生成的文件 package 名称就是 v2</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">option</span><span style="color:#A6ACCD;"> go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;./aa/v2&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="proto-文件导入-proto-文件" tabindex="-1">proto 文件导入 proto 文件 <a class="header-anchor" href="#proto-文件导入-proto-文件" aria-label="Permalink to &quot;proto 文件导入 proto 文件&quot;">​</a></h2><p>proto 文件中可以导入另一个 proto 文件</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-TFoR_" id="tab-fhStw1y" checked="checked"><label for="tab-fhStw1y">hello.proto</label><input type="radio" name="group-TFoR_" id="tab-q2Yd5zm"><label for="tab-q2Yd5zm">message.proto</label></div><div class="blocks"><div class="language-proto active"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line diff add"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;message.proto&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 导入 message.proto 文件 </span></span>
<span class="line"><span style="color:#F78C6C;">option</span><span style="color:#A6ACCD;"> go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;./;hello&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">service</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloResponse</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">rpc</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Ping</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Empty</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">returns</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Status</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line diff remove"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Empty</span><span style="color:#A6ACCD;">{ </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">} </span></span>
<span class="line diff remove"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Status</span><span style="color:#A6ACCD;">{ </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;"> status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">} </span></span>
<span class="line"></span></code></pre></div><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">option</span><span style="color:#A6ACCD;"> go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;./;hello&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Empty</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Status</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;"> status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div></div></div><p>这里两个文件的 go_package 需要保持一致</p><h2 id="嵌套-message-对象" tabindex="-1">嵌套 message 对象 <a class="header-anchor" href="#嵌套-message-对象" aria-label="Permalink to &quot;嵌套 message 对象&quot;">​</a></h2><p>当我们需要传递的数据格式比较复杂时，例如数组等，我们可以写成下面这样</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">option</span><span style="color:#A6ACCD;"> go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;./;hello&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Result</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">} </span></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloResult</span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">repeated</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Result</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 返回一个数组</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>注意</strong>，当上面中的 Result 只使用一次时，推荐使用下面写法</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">syntax </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">proto3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">option go_package </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./;hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="color:#A6ACCD;">message  Users </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff remove"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff remove"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">message HelloResult </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">  message  Users </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">int32</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  repeated Users data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>使用时，可以通过 HelloResult_Users , 就是外部和内部通过 _ 拼接成的</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HelloResult_Users</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"></span></code></pre></div>`,42),e=[o];function t(r,c,C,y,D,A){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{F as __pageData,d as default};
