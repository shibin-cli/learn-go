import{_ as s,c as a,o as n,Q as t}from"./chunks/framework.695d4026.js";const A=JSON.parse('{"title":"模型","description":"","frontmatter":{},"headers":[],"relativePath":"base/gorm/model.md"}'),l={name:"base/gorm/model.md"},e=t(`<h1 id="模型" tabindex="-1">模型 <a class="header-anchor" href="#模型" aria-label="Permalink to &quot;模型&quot;">​</a></h1><p>文档地址 <a href="https://gorm.io/zh_CN/docs/models.html" target="_blank" rel="noreferrer">https://gorm.io/zh_CN/docs/models.html</a></p><h2 id="模型定义" tabindex="-1">模型定义 <a class="header-anchor" href="#模型定义" aria-label="Permalink to &quot;模型定义&quot;">​</a></h2><p>模型是标准的 struct，由 Go 的基本数据类型、实现了 <a href="https://pkg.go.dev/database/sql#Scanner" target="_blank" rel="noreferrer">Scanner</a> 和 <a href="https://pkg.go.dev/database/sql/driver#Valuer" target="_blank" rel="noreferrer">Valuer</a> 接口的自定义类型及其指针或别名组成</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID           </span><span style="color:#C792EA;">uint</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name         </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Email        </span><span style="color:#89DDFF;">*</span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Age          </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#A6ACCD;">  Birthday     </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  MemberNumber sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullString</span></span>
<span class="line"><span style="color:#A6ACCD;">  ActivatedAt  sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullTime</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="约定" tabindex="-1">约定 <a class="header-anchor" href="#约定" aria-label="Permalink to &quot;约定&quot;">​</a></h2><p>GORM 倾向于约定优于配置 默认情况下，GORM 使用 ID 作为主键，使用结构体名的<code>蛇形复数</code>作为表名，字段名的<code>蛇形</code>作为列名，并使用 <code>CreatedAt</code>、<code>UpdatedAt</code> 字段追踪创建、更新时间</p><p>如果您遵循 GORM 的约定，您就可以少写的配置、代码。 如果约定不符合您的实际要求，GORM 允许你配置它们</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// gorm.Model 的定义</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID        </span><span style="color:#C792EA;">uint</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;primaryKey&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  DeletedAt gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DeletedAt </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;index&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>您可以将它嵌入到您的结构体中，以包含这几个字段</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Model</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等效于</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID        </span><span style="color:#C792EA;">uint</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;primaryKey&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  DeletedAt gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DeletedAt </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;index&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="字段标签" tabindex="-1">字段标签 <a class="header-anchor" href="#字段标签" aria-label="Permalink to &quot;字段标签&quot;">​</a></h2><p>声明 model 时，tag 是可选的</p><div class="language-GO"><button title="Copy Code" class="copy"></button><span class="lang">GO</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	UserId </span><span style="color:#C792EA;">uint</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;primaryKey;&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Name   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;type:varchar(50);unique;comment:姓名&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Age    </span><span style="color:#C792EA;">uint8</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;comment:年龄&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>GORM 支持以下 tag： tag 名大小写不敏感，但建议使用 <code>camelCase</code> 风格</p><table><thead><tr><th>标签名</th><th>说明</th></tr></thead><tbody><tr><td>column</td><td>指定 db 列名</td></tr><tr><td>type</td><td>列数据类型，推荐使用兼容性好的通用类型，例如：所有数据库都支持 bool、int、uint、float、string、time、bytes 并且可以和其他标签一起使用，例如：not null、size, autoIncrement… 像 varbinary(8) 这样指定数据库数据类型也是支持的。在使用指定数据库数据类型时，它需要是完整的数据库数据类型，如：MEDIUMINT UNSIGNED not NULL AUTO_INCREMENT</td></tr><tr><td>serializer</td><td>指定将数据序列化或反序列化到数据库中的序列化器, 例如: serializer:json/gob/unixtime</td></tr><tr><td>size</td><td>定义列数据类型的大小或长度，例如 size: 256</td></tr><tr><td>primaryKey</td><td>将列定义为主键</td></tr><tr><td>unique</td><td>将列定义为唯一键</td></tr><tr><td>default</td><td>定义列的默认值</td></tr><tr><td>precision</td><td>指定列的精度</td></tr><tr><td>scale</td><td>指定列大小</td></tr><tr><td>not null</td><td>指定列为 NOT NULL</td></tr><tr><td>autoIncrement</td><td>指定列为自动增长</td></tr><tr><td>autoIncrementIncrement</td><td>自动步长，控制连续记录之间的间隔</td></tr><tr><td>embedded</td><td>嵌套字段</td></tr><tr><td>embeddedPrefix</td><td>嵌入字段的列名前缀</td></tr><tr><td>autoCreateTime</td><td>创建时追踪当前时间，对于 int 字段，它会追踪时间戳秒数，您可以使用 nano/milli 来追踪纳秒、毫秒时间戳，例如：autoCreateTime:nano</td></tr><tr><td>autoUpdateTime</td><td>创建/更新时追踪当前时间，对于 int 字段，它会追踪时间戳秒数，您可以使用 nano/milli 来追踪纳秒、毫秒时间戳，例如：autoUpdateTime:milli</td></tr><tr><td>index</td><td>根据参数创建索引，多个字段使用相同的名称则创建复合索引，查看<a href="https://gorm.io/zh_CN/docs/indexes.html" target="_blank" rel="noreferrer">索引</a>获取详情</td></tr><tr><td>uniqueIndex</td><td>与 index 相同，但创建的是唯一索引</td></tr><tr><td>check</td><td>创建检查约束，例如 check:age &gt; 13，查看<a href="https://gorm.io/zh_CN/docs/constraints.html" target="_blank" rel="noreferrer">约束</a>获取详情</td></tr><tr><td>&lt;-</td><td>设置字段写入的权限， &lt;-:create 只创建、&lt;-:update 只更新、&lt;-:false 无写入权限、&lt;- 创建和更新权限</td></tr><tr><td>-&gt;</td><td>设置字段读的权限，-&gt;:false 无读权限</td></tr><tr><td>-</td><td>忽略该字段，- 表示无读写，-:migration 表示无迁移权限，-:all 表示无读写迁移权限</td></tr><tr><td>comment</td><td>迁移时为字段添加注释</td></tr></tbody></table>`,16),o=[e];function p(r,c,d,i,D,y){return n(),a("div",null,o)}const F=s(l,[["render",p]]);export{A as __pageData,F as default};
